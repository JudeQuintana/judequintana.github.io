<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aws on jq1.io</title>
    <link>https://jq1.io/tags/aws/</link>
    <description>Recent content in aws on jq1.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 04 Mar 2023 15:44:09 -0700</lastBuildDate><atom:link href="https://jq1.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Finally published to the Terraform Cloud public registry</title>
      <link>https://jq1.io/posts/finally_published_to_public_registry/</link>
      <pubDate>Sat, 04 Mar 2023 15:44:09 -0700</pubDate>
      
      <guid>https://jq1.io/posts/finally_published_to_public_registry/</guid>
      <description>Hey everyone,
Great news! The modules that power the TNT Architecture and Super Router projects for scaling VPCs and TGWs in AWS have been published to the Terraform Cloud public registry at v1.0.0, like FINALLY!
Tiered VPC-NG Centralized Router (includes Generate Routes to Other VPCs) Super Router Intra VPC Security Group Rule Super Intra VPC Security Group Rules The modules are mostly the same as what&amp;rsquo;s in my Terraform development repo at v1.</description>
    </item>
    
    <item>
      <title>Slappin&#39; chrome on the WIP</title>
      <link>https://jq1.io/posts/slappin_chrome_on_the_wip/</link>
      <pubDate>Sat, 28 Jan 2023 10:49:56 -0700</pubDate>
      
      <guid>https://jq1.io/posts/slappin_chrome_on_the_wip/</guid>
      <description>Reflection in the Rear-View: Initially, I thought the TNT Architecture project and Super Router project were &amp;ldquo;good enough&amp;rdquo; to scale VPCs and TGWs in AWS.
But, after looking back on what was built there were so many areas for improvement that I could not resist the extended refinement and discovery.
I went ahead and gave the most useful Terraform networking modules a clean chrome wrapping with encoded engravings.
Most of the work went into internal module changes and consolidating my favorite patterns to use.</description>
    </item>
    
    <item>
      <title>$init super refactor</title>
      <link>https://jq1.io/posts/init_super_refactor/</link>
      <pubDate>Tue, 11 Oct 2022 08:11:58 -0600</pubDate>
      
      <guid>https://jq1.io/posts/init_super_refactor/</guid>
      <description>Aaaand we&amp;rsquo;re back with another heavy hitting round of super refactorization in Terraform!
I think the first iteration of Super Router for AWS went well.
It allowed us to peer and route both intra-region and cross-region TGWs and VPCs with a single module.
But there was one really annoying flaw.
The caveat in the design is that the peer TGWs will have to go through the Super Router&amp;rsquo;s local provider region to get to other peer TGWs.</description>
    </item>
    
    <item>
      <title>Super Powered, Super Sharp, Super Router!</title>
      <link>https://jq1.io/posts/super_router/</link>
      <pubDate>Sat, 13 Aug 2022 16:07:10 -0600</pubDate>
      
      <guid>https://jq1.io/posts/super_router/</guid>
      <description>What&amp;rsquo;s up world?!
Welcome back for moar spicy cloud networking Terraform takes because we servin&amp;rsquo; them HOT over here so let&amp;rsquo;s dig in!
This is a follow up to the generating routes blog post.
TNT Architecture Recap The Terraform Networking Trifecta project demonstrated the ability to &amp;ldquo;scale&amp;rdquo; AWS VPCs in Terraform code by adding VPC objects to a list.
Example VPC architecture but with auto named subnets: With Tiered VPCs we can narrow down the context (ie app, cicd, general) and maximize the use of smaller network sizes.</description>
    </item>
    
    <item>
      <title>Building a generate routes function using Terraform test</title>
      <link>https://jq1.io/posts/generating_routes/</link>
      <pubDate>Sat, 05 Mar 2022 16:59:00 -0700</pubDate>
      
      <guid>https://jq1.io/posts/generating_routes/</guid>
      <description>Welcome to the next episode of thinking out loud to route in the cloud, you know my steez!
Earlier this season we abstracted a TGW Centralized Router.
Part of it&amp;rsquo;s responsibility is to manage routes between Tiered VPCs within a single region.
It will create routes to other VPC networks in private and public route tables for each VPC (except itself).
# snippet variable &amp;#34;vpcs&amp;#34; { type = map(object({ network = string az_to_private_route_table_id = map(string) az_to_public_route_table_id = map(string) })) } locals { # { vpc-1-network =&amp;gt; [ &amp;#34;vpc-1-private-rtb-id-1&amp;#34;, &amp;#34;vpc-1-public-rtb-id-1&amp;#34;, .</description>
    </item>
    
    <item>
      <title>Terraform Networking Trifecta</title>
      <link>https://jq1.io/posts/tnt/</link>
      <pubDate>Thu, 22 Jul 2021 20:11:22 -0600</pubDate>
      
      <guid>https://jq1.io/posts/tnt/</guid>
      <description>Intro Initially I&amp;rsquo;d planned to blog more than just about Terraform but it hasn&amp;rsquo;t turned out that way due to lack of time.
But that&amp;rsquo;s OK because I really do enjoy creating and writing about networking topics with Terraform in the cloud.
Content generation is hard so hats off to those who are consistently generating it.
This project is for all the Terraform headz building networks in the cloud!
It&amp;rsquo;s building on my previous Tiered VPC idea but by adding a couple more abstractions we can build flexible networking between multiple AWS VPCs with minimal code.</description>
    </item>
    
    <item>
      <title>Tiered Subnet Calculator in Terraform</title>
      <link>https://jq1.io/posts/tiered_subnet_calculator/</link>
      <pubDate>Tue, 01 Dec 2020 20:48:34 -0700</pubDate>
      
      <guid>https://jq1.io/posts/tiered_subnet_calculator/</guid>
      <description>Update Dec 17th 2022:
Things have changed since TF v0.13 like the resulting order for a list of objects with for.
So this article is outdated and the caclulator doesn&amp;rsquo;t work as described anymore if you&amp;rsquo;re using a more recent version of Terraform.
I&amp;rsquo;ll try to update article when I can figure out a fix or a better pattern (PR).
I&amp;rsquo;ve been thinking about adding support for building tiered subnets of any valid size for the next iteration of the Dynamic VPC Module.</description>
    </item>
    
    <item>
      <title>Dynamic VPC Module in Terraform 0.12</title>
      <link>https://jq1.io/posts/dynamic_vpc/</link>
      <pubDate>Fri, 21 Aug 2020 10:28:58 -0600</pubDate>
      
      <guid>https://jq1.io/posts/dynamic_vpc/</guid>
      <description>TL;DR Just show me the code! This is a Dynamic VPC Module that builds a redundant network architecture in AWS based on structured input using for_each and for constructs. It will build a VPC with private and public subnets per AZ with the proper routing and labeling.
Here is the related VPC network diagram for visual reference. Preface I was planning on releasing this blog post shortly after Terraform 0.12 released but there were unexpected delays.</description>
    </item>
    
  </channel>
</rss>
