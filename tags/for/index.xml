<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>for on jq1.io</title>
    <link>https://jq1.io/tags/for/</link>
    <description>Recent content in for on jq1.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 23 Aug 2020 16:31:18 -0600</lastBuildDate>
    <atom:link href="https://jq1.io/tags/for/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Expanding Function Arguments in Terraform</title>
      <link>https://jq1.io/posts/expanding_function_arguments/</link>
      <pubDate>Sun, 23 Aug 2020 16:31:18 -0600</pubDate>
      <guid>https://jq1.io/posts/expanding_function_arguments/</guid>
      <description>The other day I was wondering if it was possble to unpack a list of elements as args to a function in Terraform similar to * in Python or splat in Ruby? Because this code will give invalid function argument errors:
locals { new_bits = [4,4,8,4] subnets = cidrsubnets(&amp;#34;10.1.0.0/16&amp;#34;, local.new_bits) # &amp;lt;= can i unpack? } It turns out you can do this with the expansion symbol ... (three periods). Not to be confused with the Unicode ellipsis character.</description>
    </item>
    <item>
      <title>Dynamic VPC Module in Terraform 0.12</title>
      <link>https://jq1.io/posts/dynamic_vpc/</link>
      <pubDate>Fri, 21 Aug 2020 10:28:58 -0600</pubDate>
      <guid>https://jq1.io/posts/dynamic_vpc/</guid>
      <description>TL;DR Just show me the code! This is a Dynamic VPC Module that builds a redundant network architecture in AWS based on structured input using for_each and for constructs. It will build a VPC with private and public subnets per AZ with the proper routing and labeling.
Here is the related VPC network diagram for visual reference. Preface I was planning on releasing this blog post shortly after Terraform 0.12 released but there were unexpected delays.</description>
    </item>
  </channel>
</rss>
