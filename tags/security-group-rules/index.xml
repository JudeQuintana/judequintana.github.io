<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>security-group-rules on jq1.io</title>
    <link>https://jq1.io/tags/security-group-rules/</link>
    <description>Recent content in security-group-rules on jq1.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 28 Jan 2023 10:49:56 -0700</lastBuildDate><atom:link href="https://jq1.io/tags/security-group-rules/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Slappin&#39; chrome on the WIP</title>
      <link>https://jq1.io/posts/slappin_chrome_on_the_wip/</link>
      <pubDate>Sat, 28 Jan 2023 10:49:56 -0700</pubDate>
      
      <guid>https://jq1.io/posts/slappin_chrome_on_the_wip/</guid>
      <description>Reflection in the Rear-View: Initially, I thought the TNT Architecture project and Super Router project were good enough to leave alone and move on.
But after looking back on what was built there were so many areas for improvement that I could not resist the extended refinement.
I went ahead and gave the most useful Teraform AWS networking modules a clean chrome wrapping with encoded engravings.
Most of the work went into internal module changes and consolidating the best patterns to use, in my opinon.</description>
    </item>
    
    <item>
      <title>Terraform Networking Trifecta</title>
      <link>https://jq1.io/posts/tnt/</link>
      <pubDate>Thu, 22 Jul 2021 20:11:22 -0600</pubDate>
      
      <guid>https://jq1.io/posts/tnt/</guid>
      <description>Intro Initially I&amp;rsquo;d planned to blog more than just about Terraform but it hasn&amp;rsquo;t turned out that way due to lack of time.
But that&amp;rsquo;s OK because I really do enjoy creating and writing about networking topics with Terraform in the cloud.
Content generation is hard so hats off to those who are consistently generating it.
This project is for all the Terraform headz building networks in the cloud!
It&amp;rsquo;s building on my previous Tiered VPC idea but by adding a couple more abstractions we can build flexible networking between multiple AWS VPCs with minimal code.</description>
    </item>
    
  </channel>
</rss>
